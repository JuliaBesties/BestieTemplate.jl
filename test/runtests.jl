# This is only useful for testing offline. It creates a local env to avoid redownloading things.
ENV["JULIA_CONDAPKG_ENV"] = joinpath(@__DIR__, "conda-env")
if isdir(ENV["JULIA_CONDAPKG_ENV"])
  ENV["JULIA_CONDAPKG_OFFLINE"] = true
end

using COPIERTemplate
using Test

template_options = Dict(
  "PackageName" => "Tmp",
  "PackageUUID" => "1234",
  "PackageOwner" => "test",
  "AuthorName" => "Test",
  "AuthorEmail" => "test@me.now",
  "AskAdvancedQuestions" => true,
  "JuliaMinVersion" => "1.6",
  "License" => "MIT",
  "AddCodeOfConduct" => true,
  "Indentation" => "3",
  "AddMacToCI" => true,
  "AddWinToCI" => true,
  "RunJuliaNightlyOnCI" => true,
  "UseCirrusCI" => true,
)

@testset "Compare folder generated by this call vs direct copier" begin
  tmpdir1 = mktempdir()
  tmpdir2 = mktempdir()

  COPIERTemplate.generate(tmpdir1; data = template_options, vcs_ref = "main")
  bash_args = vcat([["-d"; "$k=$v"] for (k, v) in template_options]...)
  ignore(line) = startswith("_commit")(line) || startswith("_src_path")(line)
  template_path = joinpath(@__DIR__, "..")
  run(`copier copy --vcs-ref HEAD $bash_args $template_path $tmpdir2`)
  for (root, dirs, files) in walkdir(tmpdir1)
    for file in files
      file1 = joinpath(root, file)
      file2 = replace(file1, tmpdir1 => tmpdir2)
      lines1 = readlines(file1)
      lines2 = readlines(file2)
      diff = [
        "$line1 vs $line2" for
        (line1, line2) in zip(lines1, lines2) if !ignore(line1) && line1 != line2
      ]
      @test diff == []
    end
  end
end
