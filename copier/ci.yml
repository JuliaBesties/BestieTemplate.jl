AddTestCI:
  when: "{{ WhenForLight }}"
  type: bool
  default: "{{ DefaultForLight }}"
  help: Add tests workflows (Add tests workflow)
  description: |
    Whether to add the ReusableTest.yml, Test.yml and TestOnPRs.yml workflows
    that automatically runs the tests in various platforms.

    Strategy: Light

AddDocsCI:
  when: "{{ WhenForLight }}"
  type: bool
  default: "{{ DefaultForLight }}"
  help: Add docs workflow (Add docs workflow to automatically build the docs)
  description: |
    Whether to add the Docs.yml workflow that automatically builds and deploys
    the docs to GitHub Pages.

    Strategy: Light

AddCompatHelperCI:
  when: "{{ WhenForLight }}"
  type: bool
  default: "{{ DefaultForLight }}"
  help: Add CompatHelper workflow (Add CompatHelper.yml to automatically update the compat section of Project.toml)
  description: |
    Whether to add the CompatHelper.yml workflow that runs periodically to
    automatically update the compat section of the Project.toml file.

    Strategy: Light

AddTagBotCI:
  when: "{{ WhenForLight }}"
  type: bool
  default: "{{ DefaultForLight }}"
  help: Add TagBot workflow (Add TagBot.yml to automatically create tags, releases and changelogs after registering a package)
  description: |
    Add TagBot.yml to automatically create tags, releases and changelogs after
    registering a package.

    Strategy: Light

AddPrecommitUpdateCI:
  when: "{{ WhenForAdvanced and AddPrecommit }}"
  type: bool
  default: "{{ DefaultForAdvanced }}"
  help: Add pre-commit update period checks (Runs pre-commit autoupdate and creates a PR of the result)
  description: |
    Add PrecommitUpdate.yml workflow to automatically run pre-commit autoupdate.
    It is usually not necessary to have updates this frequently, so this is part of the advanced strategy.

    Strategy: Advanced

JuliaMinCIVersion:
  when: "{{ AddTestCI and WhenForLight }}"
  type: str
  help: Minimum Julia version used in the tests (min, lts, or a version. See https://github.com/julia-actions/setup-julia#examples for accepted values)
  default: "{% if JuliaMinVersion == JULIA_LTS_VERSION %}lts{% else %}{{ JuliaMinVersion }}{% endif %}"
  description: |
    The Test workflow runs two versions of Julia by default: the latest stable release, which is defined by "1", and this version.
    It defaults to either "lts", or the version that you answered in JuliaMinVersion, if it wasn't the LTS.
    Also accepts "min", which defaults to the minimum supported version in the compat section of Project.toml, or a version specification. See https://github.com/julia-actions/setup-julia#examples for more options.

    Strategy: Light

AddMacToCI:
  when: "{{ WhenForRobust }}"
  type: bool
  help: MacOS CI test (Package tests run on Ubuntu latest. Do you want to add macOS latest as well?)
  default: "{{ DefaultForRobust }}"
  description: |
    Controls whether `macos-latest` is added to list of OSs being tested in the Test workflow.

    Strategy: Robust

AddWinToCI:
  when: "{{ WhenForRobust }}"
  type: bool
  help: Windows CI test (Same as above, but for Windows)
  default: "{{ DefaultForRobust }}"
  description: |
    Controls whether `windows-latest` is added to list of OSs being tested in the Test workflow.

    Strategy: Robust

RunJuliaNightlyOnCI:
  when: "{{ WhenForAdvanced }}"
  type: bool
  help: Julia nightly CI test (Package tests run on Julia version {{ JuliaMinVersion }} and on the latest stable release. Do you also want to run them on the nightly version?)
  default: "{{ DefaultForAdvanced }}"
  description: |
    Controls whether the nightly version of Julia is added to the list of Julia versions being tested in the Test workflow.

    Strategy: Advanced

UseCirrusCI:
  when: "{{ WhenForAdvanced }}"
  type: bool
  help: FreeBSD CI test with CirrusCI (Add CirrusCI to run the package tests on FreeBSD?)
  default: "{{ DefaultForAdvanced }}"
  description: |
    Controls whether to add a `.cirrus.yml` to run tests on the Cirrus CI platform for the FreeBSD Operating System.

    Strategy: Advanced

AddCopierCI:
  when: "{{ WhenForAdvanced }}"
  type: bool
  help: Copier.yml (Add workflow to check for template updates? This is a work in progress workflow that checks whether there has been an update to the template and automatically create a pull request)
  default: "{{ DefaultForAdvanced }}"
  description: |
    !!! warning Highly experimental
        This feature is highly experimental and can be removed without a deprecation period.

    Controls whether to add a workflow to check for updates in the template and create a PR applying them.

    Strategy: Advanced

AddLintCI:
  when: "{{ WhenForModerate }}"
  type: bool
  help: Lint.yml (Whether to add a Lint.yml workflow that runs a link checker and the pre-commit hooks, if enabled by AddPrecommit)
  default: "{{ DefaultForModerate }}"
  description: |
    Whether to add a Lint.yml workflow that runs a link checker and the
    pre-commit hooks, if enabled by AddPrecommit.

    Strategy: Moderate

# Keep at end and update. This is to automatically delete the '.github/workflows' folder if there is nothing there
AddWorkflowsFolder:
  when: false
  type: bool
  default: "{{ AddTestCI or AddDocsCI or AddCompatHelperCI or AddTagBotCI or AddMacToCI or UseCirrusCI or AddCopierCI or AddLintCI }}"

AddDotGitHubFolder:
  when: false
  type: bool
  default: "{{ AddWorkflowsFolder or AddDependabot or AddGitHubPRTemplate or AddGitHubTemplates }}"
